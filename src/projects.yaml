- name: Konfig
  url: https://github.com/harryzcy/konfig
  start_year: 2023
  created_at: "2023-11-24"
  status: Ongoing
  lang: TypeScript
  lang_class: ts
  description: >-
    Konfig is a centralized configuration service designed to store and distribute configurations for various deployments.

- name: act-images
  url: https://github.com/harryzcy/act-images
  start_year: 2023
  created_at: "2023-09-17"
  status: Deployed
  lang: Dockerfile
  lang_class: docker
  description: >-
    act-images is the automated build repository for Docker images for Gitea Actions and [act](https://github.com/nektos/act).
    It ships the language runtime and tools that I use in my CI/CD pipelines for private repositories.
    It produces nightly builds that are deployed to my testing machines.

- name: Artifact Store
  url: https://github.com/harryzcy/artifact-store
  start_year: 2023
  created_at: "2023-07-23"
  status: Deployed
  lang: Rust
  lang_class: rs
  release_num: 7
  description: >-
    Artifact Store is a service that stores build artifacts from CI/CD pipelines.
    It is intended as a arbitrary file storage service that stores the output for every commit,
    so that when starting the deployment in my Kubernetes cluster,
    I can pull the latest build that's strictly versioned.

- name: snuuze
  url: https://github.com/harryzcy/snuuze
  start_year: 2023
  created_at: "2022-11-06"
  status: Ongoing
  lang: Go
  lang_class: go
  release_num: 4
  description: >-
    Snuuze is a lightweight dependency update tool that scans the entire repository and
    submit pull requests for outdated dependencies.

- name: Mailbox Browser
  url: https://github.com/harryzcy/mailbox-browser
  start_year: 2023
  created_at: "2022-11-19"
  status: Deployed
  lang: TypeScript
  lang_class: ts
  release_num: 26
  description: >-
    Mailbox Browser is a web application serving as a frontend for [Mailbox](https://github.com/harryzcy/mailbox).

- name: notion-cli
  url: https://github.com/harryzcy/notion-cli
  start_year: 2022
  created_at: "2022-05-31"
  status: Ongoing
  lang: Go
  lang_class: go
  description: >-
    notion-cli is a command line interface for Notion app.
    It supports viewing and editing pages and database in Notion.

- name: GBot
  full_name: Bot for GitHub
  start_year: 2022
  created_at: "2022-06-24"
  status: Deployed
  lang: TypeScript
  lang_class: ts
  description: >-
    GBot is a Node.js application that runs GitHub-triggered automation using GitHub webhooks.
    It is registered as a GitHub app authenticated using OAuth.
    It listens to various events and performs actions accordingly.
    Currently, it syncs GitHub repositories with my local machine whenever there's a change to the repository.

- name: Nodop
  full_name: Notion Database Operator
  url: https://github.com/harryzcy/nodop
  start_year: 2022
  created_at: "2022-06-13"
  status: Deployed
  lang: TypeScript
  lang_class: ts
  release_num: 10
  description: >-
    Nodop is a workflow runner for databases in Notion app.
    It takes workflow configuration files similar to GitHub Actions and performs them on database pages.
    The application features a builtin parser that evaluates functional expressions in the workflow configuration.
    The Notion API is used to access the database.

- name: Noti
  full_name: Notion Todo Importer
  # url: https://github.com/harryzcy/noti
  start_year: 2022
  created_at: "2022-04-06"
  status: Ongoing
  lang: TypeScript
  lang_class: ts
  description: >-
    Noti (**No**tion **t**odo **i**mporter) is a web application that helps to import my todo list to a Notion database.
    It exposes a REST API for other programs to invoke. I use to as part of my personal automation tool.

- name: GmG
  url: https://github.com/harryzcy/gmg
  start_year: 2022
  created_at: "2022-04-05"
  status: Completed
  lang: Go
  lang_class: go
  description: >-
    GmG is a CLI tool that helps to set up mirrors between GitHub and Gitea.
    I use Gitea to host my private repositories, but from time to time,
    I need to sync many private repositories to GitHub. This tool helps to ease the workflow.

- name: Mailbox
  url: https://github.com/harryzcy/mailbox
  start_year: 2022
  created_at: "2021-01-01"
  status: Deployed
  lang: Go
  lang_class: go
  release_num: 19
  description: >-
    Mailbox is a serverless application runs on AWS services and handles email sending and receiving requests using custom email addresses.
    I built a set of APIs on top of AWS services to invoke email-related operations.
    This project services as an infrastructure that provides an alternative to commercial email services that use on one-user-one-email approach.
    It is initiated to integrate automated workflows in my personal life based on certain emails receiving events.

- name: miniJava compiler
  start_year: 2022
  created_at: "2022-02-10"
  status: Completed
  lang: Java
  lang_class: java
  description: >-
    miniJava compiler is an course project that implements a compiler for miniJava, a subset of Java.
    The program will read an input file containing miniJava source code, compile it, and prepare for execution on Java Virtual Machine.

- name: action-bark
  full_name: GitHub Workflow for Bark
  url: https://github.com/harryzcy/action-bark
  start_year: 2022
  created_at: "2022-03-16"
  status: Completed
  lang: TypeScript
  lang_class: ts
  release_num: 7
  description: >-
    It is a GitHub Action workflow program and allows GitHub Actions to push iOS notifications via
    [Bark](https://github.com/Finb/bark-server),
    a self-hosted backend service that integrates with Apple Push Notification service.
    It will send a notification to the device when a workflow is completed successfully, failed, or canceled,
    based on custom configurations.

- name: canvas-file-syncer
  url: https://github.com/harryzcy/canvas-file-syncer
  start_year: 2022
  created_at: "2022-02-16"
  status: Completed
  lang: Python
  lang_class: py
  description: >-
    The canvas-file-syncer is a command line program that helps to sync files between Canvas,
    a learning management system (LMS) used by many colleges, and local file system.
    It handles the automatic login process and downloads all files from courses while keeping the directory structure.
    It takes a configuration files as input and syncs data to the right location.

- name: sakai-file-syncer
  url: https://github.com/harryzcy/sakai-file-syncer
  start_year: 2022
  created_at: "2022-02-18"
  status: Completed
  lang: Python
  lang_class: py
  description: >-
    It is a command line program that helps to sync files between Sakai and local file system.
    It handles the automatic login through Single Sign-On and downloads all files for all courses.

- name: Scheduler
  url: https://github.com/harryzcy/scheduler
  start_year: 2021
  created_at: "2021-08-21"
  status: Completed
  lang: Go
  lang_class: go
  description: >-
    Schedular is a command line program that helps to schedule tasks and run them at a specific time.
    It is a toy project that I experimented with Go and gRPC.
    It is comprised of a daemon process that manages all the tasks and a client program that invokes APIs via gRPC.
    The entry point of the program is the same binary file,
    and the daemon and client processes are started based on the flags passed to the program.

- name: The Calculator
  url: https://github.com/eric-unc/hacknc2021
  start_year: 2021
  created_at: "2021-11-06"
  status: Completed
  lang: Rust
  lang_class: rs
  description: >-
    The Calculator is built for HackNC 2021 hackathon. 
    It is a simple calculator made in Rust in collaboration with [Eric Schneider](https://eric-unc.tech/).
    I made the "backend" (parser/evaluator) and the web interface using WASM.
    Eric made the GUI that runs as a native app.
    The simple CLI version is also supported. The web version can be viewed [here](https://eric-unc.tech/hacknc2021).'

- name: Limp
  full_name: Lisp-like language
  url: https://github.com/eric-unc/limp
  start_year: 2021
  created_at: "2021-03-20"
  status: Completed
  lang: Rust
  lang_class: rs
  description: >-
    Limp is a Lisp-like programming language made in Rust.
    Together with [Eric Schneider](https://eric-unc.tech/),
    the project is made for PackHacks 2021.
    The language supports arithmetic/bitwise operations, conditional statements,
    and builtin function invocations.

- name: ascheck
  url: https://github.com/harryzcy/ascheck
  start_year: 2021
  created_at: "2021-03-27"
  status: Completed
  lang: Go
  lang_class: go
  release_num: 3
  description: >-
    ascheck is a command line tool that bulk-checks your apps for their Apple Silicon support.
